<h2 id="docker">Docker</h2>
<p>Why use Docker? - Compatibility issues with different servers -
Libraries and dependencies among applications - Long setup time for
local environments</p>
<p>Containers are isolated environments with their own processes,
network, and mounts. They share the same OS kernel.</p>
<p>Dockers uses LXC containers; providing a high level tool for
end-users to use them.</p>
<p>Containers vs. Virtual Machines - Virtual machines contain: -
Application - Library / Dependencies - OS - Managed by a Hypervisor and
Hardware Infrastructure - Containers contain: - Applications - Library /
Dependencies - Managed by Docker, OS, Hardware Infrastructure</p>
<p>Containers consume less disk space. They can boot up faster. Docker
has less isolation. VMs have complete isolation.</p>
<p>In actual environments, you have containers inside of virtual
machines.</p>
<p>Container vs. Image - Containers run instances of images - Developers
develop applications and hand it to the operations team; this generate
issues - With Docker, we create a Docker file that creates an image and
runs the same way anywhere - Docker contributes to the DevOps
culture</p>
<h2 id="docker-commands">Docker Commands</h2>
<ul>
<li><code>docker run nginx</code> - run container
<ul>
<li>-d run in the background</li>
</ul></li>
<li><code>docker ps</code> - list containers</li>
<li><code>docker ps -a</code> - show all containers</li>
<li><code>docker stop image</code> - stop a given container</li>
<li><code>docker images</code> list all images</li>
<li><code>docker pull nginx</code> pull images</li>
<li><code>docker exec cat etc/hosts</code> show the list of hosts</li>
</ul>
