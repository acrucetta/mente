<h1>List of skills that engineers underrate</h1>
<p>I asked an old professor how did she find what to learn. Her answer
impressed me.</p>
<blockquote>
<p>I also needed, at this time, to learn ancillary skills to do the
things I wanted to do outside of a day job: teach, speak, self-market,
freelance, network, et cetera. Throughout my career from then until now,
I would say it is these skills that have opened the most doors for me. I
have found it exceedingly difficult to get computer science students to
care about these skills. Anytime I try to offer a course on this, it
fails to hit the signup quorum, or gets very few signups. People want to
take Machine Learning. I get it. But it feels like a missed
opportunity.</p>
</blockquote>
<p>Why as software engineers do we self-sabotage by not learning the
skills that can put you ahead in your career. Many say, the work speaks
for itself, but my experience has been that it doesn't suffice.</p>
<p>Here's a list of skills she mentioned:</p>
<ul>
<li>Teaching</li>
<li>Public speaking</li>
<li>Marketing yourself</li>
<li>Freelancing</li>
<li>Networking</li>
</ul>
<p>Out of those, I would emphasize marketing yourself and networking. It
feels slimy, yet that's how sales get done. If you don't know how to
sell yourself, or how to manage a team, or how to communicate
effectively. You won't get promoted.</p>
<p>The question becomes, how does one do that. And what kind of jobs
rely on these skills the most.</p>
<p>Some top of mind are: sales, marketing, consultants, lawyers.
Basically, any job where you have to convince people to buy your
product. Whether that be a SaaS product or immigration services.</p>
<p>As as a software engineer here are some things you can do to get
better at them:</p>
<ul>
<li>When you finish a project, write what were the outcomes and how does
that connect to the business goals. How did you save money, reduce
costs, or improve the product?</li>
<li>When you think of an idea that the leadership is interested in, send
them a note about it, think about initiatives that could move it
forward</li>
<li>Volunteer at local programming clubs and talk to people who program
in your same language (e.g., Java user group)</li>
<li>Share what you learned from your project; either through a LinkedIn
post or in your blog</li>
<li>Join a Discord group with like-minded engineers and share things
you're excited about</li>
<li>Write a blog post teaching others how to get ramped up in a language
you have experience in</li>
<li>Volunteer at the local tech meet-up to talk about your company/tech
stack/pet project and get feedback on it</li>
<li>Read a marketing book like <insert> or <this one>; share what you
learned</li>
</ul>
